# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Movie(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, movie_id=None, title=None, description=None, rating=None, price=None, image=None):  # noqa: E501
        """Movie - a model defined in Swagger

        :param movie_id: The movie_id of this Movie.  # noqa: E501
        :type movie_id: str
        :param title: The title of this Movie.  # noqa: E501
        :type title: str
        :param description: The description of this Movie.  # noqa: E501
        :type description: str
        :param rating: The rating of this Movie.  # noqa: E501
        :type rating: float
        :param price: The price of this Movie.  # noqa: E501
        :type price: float
        :param image: The image of this Movie.  # noqa: E501
        :type image: str
        """
        self.swagger_types = {
            'movie_id': str,
            'title': str,
            'description': str,
            'rating': float,
            'price': float,
            'image': str
        }

        self.attribute_map = {
            'movie_id': 'movie_id',
            'title': 'title',
            'description': 'description',
            'rating': 'rating',
            'price': 'price',
            'image': 'image'
        }

        self._movie_id = movie_id
        self._title = title
        self._description = description
        self._rating = rating
        self._price = price
        self._image = image

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Movie of this Movie.  # noqa: E501
        :rtype: Movie
        """
        return util.deserialize_model(dikt, cls)

    @property
    def movie_id(self):
        """Gets the movie_id of this Movie.

        Unique identifier representing a specific Movie.  # noqa: E501

        :return: The movie_id of this Movie.
        :rtype: str
        """
        return self._movie_id

    @movie_id.setter
    def movie_id(self, movie_id):
        """Sets the movie_id of this Movie.

        Unique identifier representing a specific Movie.  # noqa: E501

        :param movie_id: The movie_id of this Movie.
        :type movie_id: str
        """

        self._movie_id = movie_id

    @property
    def title(self):
        """Gets the title of this Movie.

        Title of the movie.  # noqa: E501

        :return: The title of this Movie.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Movie.

        Title of the movie.  # noqa: E501

        :param title: The title of this Movie.
        :type title: str
        """

        self._title = title

    @property
    def description(self):
        """Gets the description of this Movie.

        Description of the movie.  # noqa: E501

        :return: The description of this Movie.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Movie.

        Description of the movie.  # noqa: E501

        :param description: The description of this Movie.
        :type description: str
        """

        self._description = description

    @property
    def rating(self):
        """Gets the rating of this Movie.

        Rating of the movie.  # noqa: E501

        :return: The rating of this Movie.
        :rtype: float
        """
        return self._rating

    @rating.setter
    def rating(self, rating):
        """Sets the rating of this Movie.

        Rating of the movie.  # noqa: E501

        :param rating: The rating of this Movie.
        :type rating: float
        """

        self._rating = rating

    @property
    def price(self):
        """Gets the price of this Movie.

        Price of the Movie at the store.  # noqa: E501

        :return: The price of this Movie.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this Movie.

        Price of the Movie at the store.  # noqa: E501

        :param price: The price of this Movie.
        :type price: float
        """

        self._price = price

    @property
    def image(self):
        """Gets the image of this Movie.

        Image URL containing the movie poster.  # noqa: E501

        :return: The image of this Movie.
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this Movie.

        Image URL containing the movie poster.  # noqa: E501

        :param image: The image of this Movie.
        :type image: str
        """

        self._image = image
