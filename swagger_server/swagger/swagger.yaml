---
swagger: "2.0"
info:
  description: "A simple Movie Store API"
  version: "1.0.0"
  title: "Movie Store"
host: "localhost:10000"
basePath: "/api"
paths:
  /movies:
    get:
      description: "Returns all movies from the system"
      operationId: "find_movies"
      parameters:
      - name: "tags"
        in: "query"
        description: "Tags used to filter the result"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "csv"
      - name: "limit"
        in: "query"
        description: "maximum number of results to return"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "A list of movies"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Movie"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /movies/{movie_id}:
    get:
      description: "Returns a single movie by its movie_id"
      operationId: "get_movie"
      parameters:
      - name: "movie_id"
        in: "path"
        description: "The movie's movie_id"
        required: true
        type: "string"
      responses:
        200:
          description: "A Movie"
          schema:
            $ref: "#/definitions/Movie"
        404:
          description: "The Person does not exists."
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      description: "Add a new movie to the collection"
      operationId: "add_movie"
      parameters:
      - name: "movie_id"
        in: "path"
        description: "The movie's movie_id"
        required: true
        type: "string"
      - in: "body"
        name: "movie"
        description: "The Movie JSON you want to post"
        required: false
        schema:
          $ref: "#/definitions/Movie"
      responses:
        201:
          description: "Movie created successfully"
          schema:
            $ref: "#/definitions/Movie"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions:
  Movie:
    type: "object"
    properties:
      movie_id:
        type: "string"
        description: "Unique identifier representing a specific Movie."
      title:
        type: "string"
        description: "Title of the movie."
      description:
        type: "string"
        description: "Description of the movie."
      rating:
        type: "number"
        description: "Rating of the movie."
      price:
        type: "number"
        description: "Price of the Movie at the store."
      image:
        type: "string"
        description: "Image URL containing the movie poster."
    example:
      image: "image"
      price: 6.02745618307040320615897144307382404804229736328125
      rating: 0.80082819046101150206595775671303272247314453125
      description: "description"
      movie_id: "movie_id"
      title: "title"
